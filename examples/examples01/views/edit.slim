/! script src="js/coffee-script.js" type="text/javascript"
div class="container" id="code"
  textarea id="editor" cols="50" rows="5" style="width:30%"
    | # Hello
      # This looks ok. How very nice!
      a = 1 + 2

/! Container for the scatter plot
div class="container" id="scatterplot"

/! --------------------------------------------------------------
/! -- Include files needed by CodeMirror (CM)
/! --------------------------------------------------------------
link rel="stylesheet" href="js/codemirror/lib/codemirror.css"
script src="js/codemirror/lib/codemirror.js"

/! CM utils that you use:
script src="js/codemirror/lib/util/loadmode.js"

/! CM modes that you use:
script src="js/codemirror/mode/ruby/ruby.js"

/! CM themes that you use:
link rel="stylesheet" href="js/codemirror/theme/lesser-dark.css"

script type="text/javascript"
  | var editor = CodeMirror.fromTextArea(document.getElementById("editor"), {
      lineNumbers: true,
      mode: "ruby",
      theme: "lesser-dark"
    });

script src="js/d3.v3.min.js"
script src="js/colorbrewer.js"
script src="js/coffee-script.js"
script type="text/coffeescript"
  | w = 400
    h = 400
    pad = 20
    left_pad = pad + 40
    Data_url = '/data/scatter.json'

    scatterplot = d3.select("#scatterplot")
      .append("svg")
      .attr("width", w)
      .attr("height", h)

    scatterplot.append("text")
      .attr("class", "infotext")
      .text("No search going on yet ...")
      .attr("x", (-> (w-pad-left_pad)/2))
      .attr("y", (-> (h-pad-pad)/2-5))

    d3.json(Data_url, (data) ->
      x_min = d3.min(data, ((d) -> d.fs[0]))
      x_max = d3.max(data, ((d) -> d.fs[0]))
      xscale = d3.scale.linear().domain([x_min, x_max]).range([left_pad, w-pad])

      y_min = d3.min(data, ((d) -> d.fs[1]))
      y_max = d3.max(data, ((d) -> d.fs[1]))
      yscale = d3.scale.linear().domain([y_max, y_min]).range([pad, h-pad*2])
    
      xAxis = d3.svg.axis().scale(xscale).orient("bottom")
      
      yAxis = d3.svg.axis().scale(yscale).orient("left")
  
      scatterplot.append("g")
        .attr("class", "axis")
        .attr("transform", "translate(0, "+(h-pad)+")")
        .call(xAxis)
  
      scatterplot.append("g")
        .attr("class", "axis")
        .attr("transform", "translate("+(left_pad-pad)+", 0)")
        .call(yAxis)

      v_max = d3.max(data, ((d) -> d.v))
      v_min = d3.min(data, ((d) -> d.v))
      colorscale = d3.scale.quantize() # can also try quantile()
        .range(colorbrewer.RdYlGn[11])
      # Better to have low value and better is green so invert scale:
      colorscale.domain([v_max, v_min])

      scatterplot.selectAll(".infotext").remove();
 
      scatterplot.selectAll("circle")
        .data(data)
        .enter()
        .append("circle")
        .attr("cx", ((d) -> xscale(d.fs[0])))
        .attr("cy", ((d) -> yscale(d.fs[1])))
        .attr("opacity", 0.80)
        .attr("r", 6)
        .attr("fill", ((d) -> colorscale(d.v)))
    )