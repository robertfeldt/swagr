/! script src="js/coffee-script.js" type="text/javascript"
div class="container" id="code"
  textarea id="editor" cols="50" rows="5" style="width:30%"
    | # Hello
      # This looks ok. How very nice!
      a = 1 + 2
  
div class="container" id="controller"
  input type="button" value="play" id="playBtn"
  input type="button" value="pause" id="pauseBtn"

/! Container for the scatter plot
div class="container" id="scatterplot"

/! Container for scatter plot 2
div class="container" id="scatterplot2"

/! --------------------------------------------------------------
/! -- Include files needed by CodeMirror (CM)
/! --------------------------------------------------------------
link rel="stylesheet" href="js/codemirror/lib/codemirror.css"
script src="js/codemirror/lib/codemirror.js"

/! CM utils that you use:
script src="js/codemirror/lib/util/loadmode.js"

/! CM modes that you use:
script src="js/codemirror/mode/ruby/ruby.js"

/! CM themes that you use:
link rel="stylesheet" href="js/codemirror/theme/lesser-dark.css"

script src="js/d3.v3.min.js"
script src="js/colorbrewer.js"
script src="js/coffee-script.js"
script src="coffee/d3graph.js"
script src="coffee/updating_scatterplot.js"
script type="text/coffeescript"
  | root = exports ? window

    # Updating scatterplot with fake data (for dev)
    #g = new root.Swagr.UpdatingScatterplot "#scatterplot2", '/data/scatter.json', {
    #  width:            400
    #  height:           400
    #  transition_time:  1500
    #  xfunc:            ((d) -> d.fs[0])
    #  yfunc:            ((d) -> d.fs[1])
    #  colorvaluefunc:   ((d) -> d.v)
    #}
    #g.start_updates()

    #g = new root.Swagr.UpdatingScatterplot "#scatterplot", '/data/brownian_search/top_list.json', {
      #width:            400
      #height:           400
      #transition_time:  1500
      #xfunc:            ((d) -> d.x)
      #yfunc:            ((d) -> d.y)
      ## The higher the distance the better so invert it
      #colorvaluefunc:   ((d) -> -d.distance)
    #}
    #g.start_updates()

    capitalizeFirstChar = (s) -> s.charAt(0).toUpperCase() + s.slice(1)

    root.editor = CodeMirror.fromTextArea(document.getElementById("editor"), {
      lineNumbers: true,
      mode: "ruby",
      theme: "lesser-dark"
    })

    # Update the text area window when user clicks on data d.
    update_text_area_on_click = (d) ->
      #console.log("clicked " + d.id + " from edit.slim")
      root.editor.setValue JSON.stringify(d.candidate, null, 2)

    g = new root.Swagr.UpdatingScatterplot "#scatterplot", '/data/optimization/archive.json', {
      width:            400
      height:           300
      left_pad:         50
      transition_time:  1500
      xfunc:            ((d) -> 
        x = d.subqs[0]
        console.log(x + " is NaN") if x == NaN
        x)
      yfunc:            ((d) -> d.subqs[1])
      colorvaluefunc:   ((d) -> d.qv)
      # "id", "qv", "qvd", "subqs", "candidate", "pos", "type"
      tooltipmapper:    ((d) ->
        if d.type == "specialist"
          s = d.type + " " + d.list_index + "."
        else
          s = d.type
        capitalizeFirstChar(s) + d.pos + "<br/>  <strong>Q</strong> = " + d.qvd.toPrecision(5) + 
          "%<br/>  <strong>SubQs</strong> = " + d.subqs[0].toPrecision(3) + ", " + d.subqs[1].toPrecision(3)
      )
      clickfunc:        update_text_area_on_click
    }
    g.start_updates()

    control_optimization = (urlEnding) ->
      url = "/data/optimization/controller/" + urlEnding + ".json"
      d3.json url, ((data, error) -> 
        console.log( "Changed mode to: " + urlEnding )
        null
      )

    $("#playBtn").click(() -> control_optimization "play")
    $("#pauseBtn").click(() -> control_optimization "pause")